apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres  
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      annotations:
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/role: 'test-role'
        vault.hashicorp.com/agent-inject-secret-password.txt: 'test/secret'
        # Annotations for k8s auth method auto-auth (uncomment to set up k8s auth method auto-auth)
        vault.hashicorp.com/auth-path: auth/kubernetes
        vault.hashicorp.com/auth-type: kubernetes
        # Annotations for jwt auth method auto-auth (uncomment to set up k8s auth method auto-auth)
        # vault.hashicorp.com/auth-path: auth/jwt
        # vault.hashicorp.com/auth-type: jwt
        # vault.hashicorp.com/auth-config-path: /var/run/secrets/kubernetes.io/serviceaccount/token
        # vault.hashicorp.com/auth-config-remove_jwt_after_reading: 'false'
      labels:
        app: postgres
    spec:
      serviceAccountName: postgres-service-account
      containers:
        - name: postgres
          image: postgres:10.1 
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432  
          envFrom:
            - configMapRef:
                name: postgres-config
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: postgres-pv-claim

