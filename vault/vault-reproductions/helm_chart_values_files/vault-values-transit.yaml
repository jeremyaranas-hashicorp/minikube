global:
  enabled: true
  tlsDisable: true
csi:  
  enabled: true
injector:
  enabled: true
  logLevel: debug
server:
  logLevel: debug
  affinity: ""
  auditStorage:
    enabled: true
    mountPath: "/vault/audit"
  ha:
    apiAddr: "http://vault-active.vault.svc.cluster.local:8200"
    clusterAddr: "http://$(HOSTNAME).vault-internal.vault.svc.cluster.local:8201"  
    enabled: true
    replicas: 3
    raft: 
      enabled: true
      config: | 
        ui = true
        service_registration "kubernetes" {}
        listener "tcp" {
          tls_disable = 1
          address = "[::]:8200"
          cluster_address = "[::]:8201"
        }

        storage "raft" {
            path = "/vault/data"
              retry_join {
                leader_api_addr = "http://vault-0.vault-internal:8200"
            }
            retry_join {
              leader_api_addr = "http://vault-1.vault-internal:8200"
            }
            retry_join {
              leader_api_addr = "http://vault-2.vault-internal:8200"
            }
        }
          
        seal "transit" {
          address = "http://vault-auto-unseal-0.vault-auto-unseal-internal:8200"
          token = "$TOKEN"
          disable_renewal = "false"
          key_name = "autounseal"
          mount_path = "transit/"
          tls_skip_verify = "true"
        }   
  image:
    repository: hashicorp/vault-enterprise
    tag: $VERSION
  enterpriseLicense:
    secretName: vault-ent-license
  extraEnvironmentVars:
  readinessProbe:
    enabled: false
    path: '/v1/sys/health?standbyok=true&perfstandbyok=true'
  livenessProbe:
    enabled: false
    path: '/v1/sys/health?standbyok=true&perfstandbyok=true'
ui:
  # Use minikube service command to expose service
  enabled: true
  publishNotReadyAddresses: true
  activeVaultPodOnly: false
  serviceType: "LoadBalancer"
  serviceNodePort: null
  externalPort: 8200
  targetPort: 8200

  